version: '3.1'
services:
  ## Postgres Order service
  postgres-order:
    container_name: postgres-order-service-guava
    image: "postgres:14.1-alpine"
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  ## Postgres Delivery service
  postgres-delivery:
    container_name: postgres-delivery-service-guava
    image: "postgres:14.1-alpine"
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  ## Kafka cluster
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper-guava
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker-guava
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Discovery server
  discovery-server:
    image: discovery-server:latest
    container_name: discovery-server
    ports:
      - "8766:8761"

  ## API gateaway
  api-gateway:
    image: guava-apigateway:latest
    container_name: api-gateway-guava
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=TRACE
    depends_on:
      - discovery-server

  ## Order service springboot
  order-service:
    image: order-service:latest
    container_name: order-service-guava
    build: .
    restart: always
    ports:
      - "8082:8080"
    depends_on:
      - postgres-order
      - broker
      - discovery-server
      - api-gateway
    links:
      - postgres-order:postgres-order
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  ## Delivery service springboot
  delivery-service:
    image: delivery-service:latest
    container_name: delivery-service-guava
    build: .
    restart: always
    ports:
      - "8083:8080"
    depends_on:
      - postgres-delivery
      - broker
      - discovery-server
      - api-gateway
    links:
      - postgres-delivery:postgres-delivery
    environment:
      - SPRING_PROFILES_ACTIVE=docker
